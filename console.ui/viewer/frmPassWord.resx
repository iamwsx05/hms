<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>